// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.ScheduledJobs.AcceptanceTests.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AuditDataCleanUp")]
    public partial class AuditDataCleanUpFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AuditDataCleanUp.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AuditDataCleanUp", "Audit Data for Old or failed submissions should be deleted to improve system perf" +
                    "ormance at Month End", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, New TimedOut Submission Au" +
            "dit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedNewTimedOutSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, New TimedOut Submission Au" +
                    "dit Data are NOT deleted", null, ((string[])(null)));
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("Submission A has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("Submission B has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old TimedOut Submission Au" +
            "dit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldTimedOutSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old TimedOut Submission Au" +
                    "dit Data are NOT deleted", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.And("Submission A has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("Submission B has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All TimedOut Submission Au" +
            "dit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllTimedOutSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All TimedOut Submission Au" +
                    "dit Data are NOT deleted", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("Submission X has status TimedOut from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("Submission A has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("Submission B has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
            "null Submission for TimedOut Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllDCJobSucceededStatusNullSubmissionForTimedOutAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
                    "null Submission for TimedOut Audit Data are NOT deleted", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("Submission X has status TimedOut from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("Submission X has DCJobSucceeded Null from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("Submission A has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("Submission A has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("Submission B has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("Submission B has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, New DcTasksFailed Submissi" +
            "on Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedNewDcTasksFailedSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, New DcTasksFailed Submissi" +
                    "on Audit Data are NOT deleted", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
 testRunner.And("Submission A has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("Submission B has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old DcTasksFailed Submissi" +
            "on Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldDcTasksFailedSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old DcTasksFailed Submissi" +
                    "on Audit Data are NOT deleted", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("Submission A has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("Submission B has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All DcTasksFailed Submissi" +
            "on Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllDcTasksFailedSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All DcTasksFailed Submissi" +
                    "on Audit Data are NOT deleted", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 60
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("Submission X has status DcTasksFailed from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("Submission A has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("Submission B has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
            "null Submission for DcTasksFailed Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllDCJobSucceededStatusNullSubmissionForDcTasksFailedAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
                    "null Submission for DcTasksFailed Audit Data are NOT deleted", null, ((string[])(null)));
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("Submission X has status DcTasksFailed from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("Submission X has DCJobSucceeded Null from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("Submission A has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("Submission A has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("Submission B has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("Submission B has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, New InProgress Submission " +
            "Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedNewInProgressSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, New InProgress Submission " +
                    "Audit Data are NOT deleted", null, ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
 testRunner.And("Submission A has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("Submission B has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old InProgress Submission " +
            "Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldInProgressSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old InProgress Submission " +
                    "Audit Data are NOT deleted", null, ((string[])(null)));
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 94
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.And("Submission A has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("Submission B has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then("Submission A and Submission B Both NOT deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All InProgress Submission " +
            "Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllInProgressSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All InProgress Submission " +
                    "Audit Data are NOT deleted", null, ((string[])(null)));
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 101
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("Submission X has status InProgress from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("Submission A has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("Submission B has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 108
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
            "null for InProgress Submission Audit Data are NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedAllDCJobSucceededStatusNullForInProgressSubmissionAuditDataAreNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, All DCJobSucceeded status " +
                    "null for InProgress Submission Audit Data are NOT deleted", null, ((string[])(null)));
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 112
 testRunner.Given("a Provider has done one submissions, Submission X in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
 testRunner.And("Now does two new submissions, First Submission A and Second Submission B in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
 testRunner.And("Submission X has status InProgress from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("Submission X has DCJobSucceeded Null from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("Submission A has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("Submission A has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("Submission B has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And("Submission B has DCJobSucceeded Null from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.Then("Submission X is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
 testRunner.And("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
            "udit Data is deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldCompletedSubmissionAuditDataIsDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
                    "udit Data is deleted", null, ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 127
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
 testRunner.And("Both Submission has status Completed in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.Then("Submission A is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old CompletedWithErrors Su" +
            "bmission Audit Data is deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldCompletedWithErrorsSubmissionAuditDataIsDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old CompletedWithErrors Su" +
                    "bmission Audit Data is deleted", null, ((string[])(null)));
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 134
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
 testRunner.And("Both Submission has status CompletedWithErrors in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
 testRunner.Then("Submission A is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
            "nd DCJobSucceeded False Audit Data is deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldCompletedSubmissionAndDCJobSucceededFalseAuditDataIsDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
                    "nd DCJobSucceeded False Audit Data is deleted", null, ((string[])(null)));
#line 140
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 141
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
 testRunner.And("Both Submission has status Completed in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("Submission A has DCJobSucceeded false from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("Submission B has DCJobSucceeded true from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
 testRunner.Then("Submission A is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
            "nd DCJobSucceeded Audit Data is NOT deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldCompletedSubmissionAndDCJobSucceededAuditDataIsNOTDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
                    "nd DCJobSucceeded Audit Data is NOT deleted", null, ((string[])(null)));
#line 149
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 150
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 151
 testRunner.And("Both Submission has status Completed in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("Submission A has DCJobSucceeded true from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("Submission B has DCJobSucceeded false from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 155
 testRunner.Then("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 156
 testRunner.And("Submission B is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Only Completed Submission " +
            "Audit Data is deleted")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOnlyCompletedSubmissionAuditDataIsDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Only Completed Submission " +
                    "Audit Data is deleted", null, ((string[])(null)));
#line 158
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 159
 testRunner.Given("a Provider has done one submissions, Submission A in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.And("Now does two new submissions, First Submission B and Second Submission C in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("Now does two new submissions, First Submission D and Second Submission E in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("Submission A has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("Submission B has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("Submission C has status CompletedWithErrors from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And("Submission D has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("Submission E has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
 testRunner.Then("Submission A is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("Submission C is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And("Submission D is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And("Submission E is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, No Submission Audit Data a" +
            "re deleted for multiple Periods")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedNoSubmissionAuditDataAreDeletedForMultiplePeriods()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, No Submission Audit Data a" +
                    "re deleted for multiple Periods", null, ((string[])(null)));
#line 174
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 175
 testRunner.Given("a Provider has done one submissions, Submission A in collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.And("Now does two new submissions, First Submission B and Second Submission C in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("Now does two new submissions, First Submission D and Second Submission E in colle" +
                    "ction period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("Submission A has status CompletedWithErrors from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("Submission B has status TimedOut from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("Submission C has status DcTasksFailed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("Submission D has status Completed from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("Submission E has status InProgress from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
 testRunner.Then("Submission A is NOT deleted from collection period 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 185
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
 testRunner.And("Submission C is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And("Submission D is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("Submission E is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
            "udit Data is deleted for both academic years during rollover")]
        public virtual void UponAuditDataCleanupScheduleFunctionIsExecutedOldCompletedSubmissionAuditDataIsDeletedForBothAcademicYearsDuringRollover()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("upon Audit Data Cleanup Schedule Function is executed, Old Completed Submission A" +
                    "udit Data is deleted for both academic years during rollover", null, ((string[])(null)));
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 191
 testRunner.Given("a Provider has done two submissions, First Submission A and Second Submission B i" +
                    "n collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 192
 testRunner.And("a Provider has done two submissions for the previous academic year, First Submiss" +
                    "ion C and Second Submission D in collectionPeriod 14", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.And("Both Submission has status Completed in collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("Both Submission has status Completed in collection period 14", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.When("Audit Data Cleanup Function is executed in collectionPeriod 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
 testRunner.Then("Submission A is deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 197
 testRunner.And("Submission B is NOT deleted from collection period 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("Submission C is deleted from collection period 14", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("Submission D is NOT deleted from collection period 14", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
